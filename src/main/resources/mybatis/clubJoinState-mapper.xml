<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="JoinState">
  
  	<!-- 가입요청하기 -->
  	<insert id="requestJoin">
  		insert into club_join_state values(club_join_state_seq.nextval, #{cs_board_seq}, #{cs_boss_id}, #{cs_join_id}, 1, sysdate)
  	</insert>
  
  	<!-- 가입신청한 회원 정보 리스트 -->
  	<select id="joinMemberInfo" resultType="kh.hobby1st.dto.MemberDTO">
  		select m.* from (select * from club_join_state where cs_boss_id = #{value} and cs_state=1) s join member m on (s.cs_join_id = m.mem_id) order by s.cs_date desc
  	</select>
  	
  	<!-- 가입신청된 동호회 정보 리스트 -->
  	<select id="joinClubInfo" resultType="kh.hobby1st.dto.ClubListDTO">
  		select c.* from (select * from club_join_state where cs_boss_id = #{value} and cs_state=1) s join club_list c on (s.cs_board_seq  = c.cl_id) order by s.cs_date desc
  	</select>
  	
  	<!-- 동호회 가입 승인 -->
  	<update id="joinApprove">
  		update club_join_state set cs_state = 2, cs_date = sysdate where cs_board_seq = #{cs_board_seq} and cs_join_id = #{cs_join_id}
  	</update>
  	
  	<!-- 동호회 가입 거절 -->
  	<update id="joinRefuse">
  		update club_join_state set cs_state = 3, cs_date = sysdate where cs_board_seq = #{cs_board_seq} and cs_join_id = #{cs_join_id}
  	</update>
  	
  	<!-- 승인한 회원 동호회 회원목록에 넣기 -->
  	<insert id="insertClubMember">
  		insert into club_member values(club_member_seq.nextval, #{cm_mem_id}, #{cm_par_seq}, sysdate)
  	</insert>
  	
  	<!-- 해당 동호회에 요청했는지 -->
  	<select id="checkClubJoin" resultType="int">
  		select count(*) from club_join_state where cs_join_id = #{cs_join_id} and cs_state=1 and cs_board_seq = #{cs_board_seq}
  	</select>
  	
  	<!-- 나의 동호회 활동 정보 날짜순 (동호회정보)  -->
  	<select id="orderDateClubInfo" resultType="kh.hobby1st.dto.ClubListDTO">
  		select l.* from club_list l join (select * from club_join_state where cs_join_id = #{value} order by cs_date desc) j on (l.cl_id = j.cs_board_seq) where j.cs_join_id = #{value} order by j.cs_date desc
  	</select>
  	
  	<!-- 나의 동호회 활동 정보 날짜순 (상태 정보)  -->
  	<select id="orderDateStateInfo" resultType="kh.hobby1st.dto.ClubJoinStateDTO">
  		select j.* from club_list l join (select * from club_join_state where cs_join_id = #{value} order by cs_date desc) j on (l.cl_id = j.cs_board_seq) where j.cs_join_id = #{value}
  	</select>
  	
  	<!-- 나의 동호회 활동 정보 상태순 (동호회정보)  -->
  	<select id="orderStateClubInfo" resultType="kh.hobby1st.dto.ClubListDTO">
  		select l.* from club_list l join (select * from club_join_state where cs_join_id = #{value} order by cs_state) j on (l.cl_id = j.cs_board_seq) where j.cs_join_id = #{value}
  	</select>
  	
  	<!-- 나의 동호회 활동 정보 상태순 (상태 정보)  -->
  	<select id="orderStateStateInfo" resultType="kh.hobby1st.dto.ClubJoinStateDTO">
  		select j.* from club_list l join (select * from club_join_state where cs_join_id = #{value} order by cs_state) j on (l.cl_id = j.cs_board_seq) where j.cs_join_id = #{value}
  	</select>
  	
  	<!-- 클럽 탈퇴하기 (club_join_state Table에서 삭제) -->
  	<delete id="deleteJoinState">
  		delete from club_join_state where cs_join_id = #{cs_join_id} and cs_board_seq = #{cs_board_seq}
  	</delete>
  	
  	<!-- 클럽 탈퇴하기 (club_member Table에서 삭제) -->
  	<delete id="deleteClubmember">
  		delete from club_member where cm_mem_id = #{cm_mem_id} and cm_par_seq = #{cm_par_seq}
  	</delete>
  	
  	<!-- 동호회 해체시 club_list 에서 제외 -->
  	<delete id="breakClubList">
  		delete from club_list where cl_id = #{value}
  	</delete>
  	
  	<!-- 동호회 해체시 각 동호회원들 club_member 에서 제외 -->
  	<delete id="breakClubMember">
  		delete from club_member where cm_par_seq = #{value}
  	</delete>
  	
  	<!-- 동회회원들 해당 동호회 해체 상태로 변경 -->
  	<update id="breakClubState">
  		update club_join_state set cs_state = 4 where cs_board_seq = #{value}
  	</update>
  	
  	<!-- 회원 탈퇴시 상태 정보 삭제 -->
  	<delete id="leaveMemberState">
  		delete from club_join_state where cs_join_id = #{value}
  	</delete>
  	
  	
  </mapper>
